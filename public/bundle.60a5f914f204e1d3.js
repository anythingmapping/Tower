(()=>{"use strict";const t=[{x:1.34333840583513,y:705.252663063441},{x:408.374875373878,y:686.445925381749},{x:407.031536968043,y:437.928320302252},{x:53.7335362334051,y:437.928320302251},{x:55.0768746392402,y:118.213779713491},{x:428.524951461405,y:120.900456525161},{x:483.601826100645,y:145.080547830193},{x:623.309020307499,y:158.513931888545},{x:631.36905074251,y:272.69769638453},{x:765.702891326022,y:272.697696384531},{x:814.063073936086,y:253.890958702839},{x:818.199215716763,y:146.911348924493},{x:1175.42110510574,y:135.677178989347},{x:1170.04775148239,y:304.937818124574},{x:1035.71391089888,y:308.967833342079},{x:1037.05724930472,y:505.095240594008},{x:679.729233352574,y:506.438578999842},{x:679.729233352574,y:707.939339875112},{x:1092.13412394396,y:705.252663063441},{x:1360.80180511098,y:699.879309440101},{x:1360.80180511098,y:701.222647845936}],i=[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,14,0];class s{constructor(t,i,{position:s={x:0,y:0}}){this.position=s,this.width=100,this.ctx=t,this.waypoints=i,this.height=100,this.waypoint_index=0,this.center={x:this.position.x+this.width/2,y:this.position.y+this.height/2},this.radius=50,this.health=100,this.velocity={x:0,y:0},this.image=new Image,this.image.src="./orc.png",this.frames_max={max:7,current:0,elapsed:0,hold:2}}draw(){const t=this.image.width/this.frames_max.max,i={position:{x:t*this.frames_max.current,y:0},width:t,height:this.image.height};this.ctx.drawImage(this.image,i.position.x,i.position.y,i.width,i.height,this.position.x,this.position.y,i.width,i.height),this.frames_max.elapsed++,this.frames_max.elapsed%this.frames_max.hold==0&&(this.frames_max.current++,this.frames_max.current>this.frames_max.max-1&&(this.frames_max.current=0)),this.ctx.fillStyle="red",this.ctx.fillRect(this.position.x,this.position.y-15,this.width,10),this.ctx.fillStyle="green",this.ctx.fillRect(this.position.x,this.position.y-15,this.width*this.health/100,10)}update(){this.draw();const t=this.waypoints[this.waypoint_index],i=t.y-this.center.y,s=t.x-this.center.x,e=Math.atan2(i,s);this.velocity.x=4*Math.cos(e),this.velocity.y=4*Math.sin(e),this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.center={x:this.position.x+this.width/2,y:this.position.y+this.height/2},Math.abs(Math.round(this.center.x)-Math.round(t.x))<Math.abs(this.velocity.x)&&Math.abs(Math.round(this.center.y)-Math.round(t.y))<Math.abs(this.velocity.y)&&this.waypoint_index<this.waypoints.length-1&&this.waypoint_index++}}class e{constructor(t,{position:i={x:0,y:0}}){this.position=i,this.ctx=t,this.size=64}draw(){this.ctx.fillStyle=this.color,this.ctx.fillRect(this.position.x,this.position.y,this.size,this.size)}update(t){this.draw(),t.x>this.position.x&&t.x<this.position.x+this.size&&t.y>this.position.y&&t.y<this.position.y+this.size?this.color="white":this.color="rgba(255,255,255,0.15)"}}class h{constructor(t,{position:i={x:0,y:0},enemy:s}){this.position=i,this.velocity={x:0,y:0},this.ctx=t,this.enemy=s,this.radius=10,this.image=new Image,this.image.src="./projectile.png"}draw(){this.ctx.drawImage(this.image,this.position.x,this.position.y)}update(){this.draw();const t=Math.atan2(this.enemy.center.y-this.position.y,this.enemy.center.x-this.position.x);this.velocity.x=5*Math.cos(t),this.velocity.y=5*Math.sin(t),this.position.x+=this.velocity.x,this.position.y+=this.velocity.y}}class o{constructor(t,{position:i={x:0,y:0}}){this.position=i,this.ctx=t,this.position=i,this.width=128,this.height=64,this.center={x:this.position.x+this.width/4,y:this.position.y+this.height/2},this.projectiles=[],this.radius=250,this.target,this.frames=0}draw(){this.ctx.fillStyle="blue",this.ctx.fillRect(this.position.x,this.position.y,64,64),this.ctx.beginPath(),this.ctx.arc(this.center.x,this.center.y,this.radius,0,2*Math.PI),this.ctx.fillStyle="rgba(0,0,255,0.21)",this.ctx.fill()}update(){this.draw(),this.frames%100==0&&this.target&&this.projectiles.push(new h(this.ctx,{position:{x:this.center.x,y:this.center.y},enemy:this.target})),this.frames++}}const n=document.querySelector("canvas"),c=n.getContext("2d");c.fillStyle="white",c.fillRect(0,2,n.width,n.height);const a=new Image;a.onload=()=>{f()},a.src="map.png";const r=[];for(let t=0;t<i.length;t+=20)r.push(i.slice(t,t+20));const y=[];r.forEach(((t,i)=>{t.forEach(((t,s)=>{14===t&&y.push(new e(c,{position:{x:64*s,y:64*i}}))}))}));const x=[];let l,p=3,d=10,m=100;const u=[];function g(i){for(let e=1;e<i+1;e++){const i=150*e;x.push(new s(c,t,{position:{x:t[0].x-i,y:t[0].y}}))}}function f(){const t=requestAnimationFrame(f);c.drawImage(a,0,0);for(let i=x.length-1;i>=0;i--){const s=x[i];s.update(),s.position.x>n.width&&(x.splice(i,1),d-=1,document.querySelector("#hearts").innerHTML=d,d<=0&&(console.log("game over"),cancelAnimationFrame(t),document.querySelector("#gameOver").style.display="flex"))}0===x.length&&(g(p),p+=2),y.forEach((t=>{t.update(w)})),u.forEach((t=>{t.update(),t.target=null;const i=x.filter((i=>{const s=i.center.x-t.center.x,e=i.center.y-t.center.y;return Math.hypot(s,e)<i.radius+t.radius}));t.target=i[0];for(let i=t.projectiles.length-1;i>=0;i--){const s=t.projectiles[i];s.update();const e=s.enemy.center.x-s.position.x,h=s.enemy.center.y-s.position.y;if(Math.hypot(e,h)<s.enemy.radius+s.radius){if(s.enemy.health-=20,s.enemy.health<=0){const t=x.findIndex((t=>s.enemy===t));t>-1&&(x.splice(t,1),m+=25,document.querySelector("#coins").innerHTML=m)}t.projectiles.splice(i,1)}}}))}g(1);const w={x:void 0,y:void 0};n.addEventListener("click",(t=>{l&&!l.isOccupied&&m-50>=0&&(m-=50,document.querySelector("#coins").innerHTML=m,u.push(new o(c,{position:{x:l.position.x,y:l.position.y}})),l.isOccupied=!0)})),window.addEventListener("mousemove",(t=>{w.x=t.clientX,w.y=t.clientY,l=null;for(let t=0;t<y.length;t++){const i=y[t];if(w.x>i.position.x&&w.x<i.position.x+i.size&&w.y>i.position.y&&w.y<i.position.y+i.size){l=i;break}}}))})();
//# sourceMappingURL=bundle.60a5f914f204e1d3.js.map